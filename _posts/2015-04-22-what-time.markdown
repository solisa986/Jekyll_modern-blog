---
title:  "Projects"
subtitle: "All Out Technical Creativity"
author: "Adriana Solis"
avatar: "img/authors/adriana.jpg"
image: "img/c.jpg"
date:   2015-04-22 12:12:12
---

### Computer Science Projects
This page will provide an in-depth description of the different projects I have worked on and contributed to during my time at Allegheny College. Make sure to check out the demos page for a slide-by-slide demonstration of the different projects!

<details>
<summary>Click for more information: <b><u>GatorMiner</u></b></summary>
<br>
This project was developed during my Software Engineering course in the Spring of 2021. This is an 'automated text-mining tool written in Python to measure the technical responsibility of students in computer science courses, being used to analyze students' markdown reflection documents and five questions survey based on Natural Language Processing in the Department of Computer Science at Allegheny College'. As a part of my course requirements, I participated in adding the following features to this text-mining tool:
<br>

<br>
<details>
<summary>Click for more information: <u>Frequency Analysis Word Cloud</u></summary>
<br>
<b>Description:</b>
This feature was added to GatorMiner through the implementation of the Git Hub Issue Tracker. Using a team of 'developors' and a pre-assigned 'Scrum leader', we were able to use the collected data in the words frewuency analysis and pass it into a package responsible for creating the word cloud. Following the Scrum-Agile framework and other concepts explored in our course, we held and attended 3 development meetings a week. In these meetings, we would discuss any technical challenges we were experiencing and what parts of the code were completed. Our scrum leader would assign us tasks and deadlines for these tasks in order to make sure that we would meet our feature deadline. Once we finished implementing our feature, we would issue a pull request so that the Professor could review our work and provide comments on our source code. In order to make sure that there were not any merge conflicts or segments in our code that would issue a failing build, a Technical Leader was assigned to comment any changes that were needed.
<br>

<br>
For a walkthrough of what [this feature](https://github.com/Allegheny-Ethical-CS/GatorMiner/issues/85) does, make sure to check out the demos page!
<br>

<br>
</details>
<details>
<summary>Click for more information: <u>Frequencies of Categories of Words</u></summary>
<br>
<b>Description:</b>
This feature was also added to GatorMiner through the implementation of the Git Hub Issue Tracker. Given that this tool would be used by the Department of Computer Science to analyze class assignments and reflections, my team decided that it would be convenient to 'add the most frequent categories of words to the frequency analysis page to get a broader view of what is most frequently referenced in the assignments'. We decided to use the same Scrum-Agile framework as our previous issue, where my assigned role was in the development team. My role was to update our sprint log, write the test cases, and help another developer with the implementation of the interface. Given that most of this issue included some AI sophistications, our feature had a longer timeframe than our previous one. Nonetheless, I continuously worked on debugging our feature, consulting with other developers about their progress to update the spring log, and worked with another developer about the strategy for implementing the interface until test cases could be added.
<br>

<br>
For a walkthrough of what [this feature](https://github.com/Allegheny-Ethical-CS/GatorMiner/issues/51) does, make sure to check out the demos page!
<br>

<br>
</details>

<details>
<summary>Click for more information: <u>Pytest Plugin</u></summary>
<br>
<b>Description:</b>
For the last project of my Software Engineering course, we were tasked with a variety of different options, one of which included creating a new Pytest Plugin. My team decided to adopt the Scrum-Agile framework for this assignment. We decided to add on to an existing plugin, where we added a new feature to this plugin. As I was elected as the Scrum Leader for this project, I assigned preliminary tasks and deadlines to the development team. The original plugin made the pytest results report in a Markdown table format. Our new feature will link these results to a given email address and send the report in a Markdown file to a user's email address. Given that we work forking another plugin, the majority of our first meetings dealt with 'cleaning up' the original plugin and updating the dependencies files. Once these tasks were finished, we held another meeting where I assigned the final round of tasks to the development team. My role as Scrum Leader mainly meant that I was delegating tasks and planning our meetings, but I also helped with the debugging, linting, and strategy behind the test cases. Given that our plugin was a forked repository, unlike the other features we implemented in GatorMiner, we decided not to use the Git Hub Issue Tracker strategy. Instead, we used Git Hub teams and provided communication if we were working on the feature in order to avoid merge conflicts.
<br>

<br>
For a walkthrough of what [this feature](https://github.com/allegheny-computer-science-203-s2021/PytestPlugin-Team7) does, make sure to check out the demos page!
<br>

<br>
</details>
</details>

_______________________________________________________________________________

<details>
<summary>Click for more information: <u><b>Cipher for Spies</b></u></summary>
<br>
<br>
<b>Description:</b>
For my final project for Data Abstraction, my group decided to create a program that would give the user the option to choose between 3 different ciphers in order to 'send' encrypted messages. Since we wanted to ensure that the plaintext provided by the user would not be exposed during the encryption process, we decided to implement a feature into our program that would hide the user's keystrokes with an asterick. The 3 different ciphers are the Caesarian Cipher, the Vigenere Cipher, and a unique blended cipher (Caesarian and Vigenere Cipher are combined to form one cipher). The user then has the option to display their decrypted text from the ciphertext.
<br>

<br>
<b>Click for more information: <u>Breakdown: Ceasarian Cipher</u></b>
<br>

<br>
sample info.
<br>

<br>
<b>Click for more information: <u>Breakdown: Vigenere Cipher</u></b>
<br>

<br>
sample info.
<br>

<br>
<b>Click for more information: <u>Breakdown: Hybrid Cipher</u></b>
<br>

<br>
sample info.
<br>

<br>
</details>

_______________________________________________________________________________

<details>
<summary>Click for more information: <u><b>Schedule Maker!</b></u></summary>

sample info.
</details>

_______________________________________________________________________________
